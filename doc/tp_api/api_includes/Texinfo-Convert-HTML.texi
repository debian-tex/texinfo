@node Texinfo::Convert::HTML
@chapter Texinfo::Convert::HTML

@menu
* Texinfo@asis{::}Convert@asis{::}HTML NAME::
* Texinfo@asis{::}Convert@asis{::}HTML SYNOPSIS::
* Texinfo@asis{::}Convert@asis{::}HTML DESCRIPTION::
* Texinfo@asis{::}Convert@asis{::}HTML METHODS::
* Texinfo@asis{::}Convert@asis{::}HTML AUTHOR::
@end menu

@node Texinfo::Convert::HTML NAME
@section NAME

Texinfo::Convert::HTML - Convert Texinfo tree to HTML

@node Texinfo::Convert::HTML SYNOPSIS
@section SYNOPSIS

@verbatim
  my $converter 
    = Texinfo::Convert::HTML->converter({'parser' => $parser});

  $converter->output($tree);
  $converter->convert($tree);
  $converter->convert_tree($tree);
  $converter->output_internal_links(); # HTML only
@end verbatim

@node Texinfo::Convert::HTML DESCRIPTION
@section DESCRIPTION

Texinfo::Convert::HTML converts a Texinfo tree to HTML.

@node Texinfo::Convert::HTML METHODS
@section METHODS

@table @asis
@item $converter = Texinfo::Convert::HTML->converter($options)
@anchor{Texinfo::Convert::HTML $converter = Texinfo::Convert::HTML->converter($options)}

Initialize converter from Texinfo to HTML.  

The @emph{$options} hash reference holds options for the converter.  In
this option hash reference a parser object may be associated with the 
@emph{parser} key.  The other options should be configuration options
described in the Texinfo manual.  Those options, when appropriate,
override the document content.

See @ref{Texinfo::Convert::Converter NAME} for more informations.

@item $converter->output($tree)
@anchor{Texinfo::Convert::HTML $converter->output($tree)}

Convert a Texinfo tree @emph{$tree} and output the result in files as
described in the Texinfo manual.

@item $result = $converter->convert($tree)
@anchor{Texinfo::Convert::HTML $result = $converter->convert($tree)}

Convert a Texinfo tree @emph{$tree} or tree portion and return 
the resulting output.

@item $result = $converter->convert_tree($tree)
@anchor{Texinfo::Convert::HTML $result = $converter->convert_tree($tree)}

Convert a Texinfo tree portion @emph{$tree} and return the resulting 
output.  This function does not try to output a full document but only
portions.  For a full document use @code{convert}.

@item $result = $converter->output_internal_links()
@anchor{Texinfo::Convert::HTML $result = $converter->output_internal_links()}

Returns text representing the links in the document.  The format should
follow the @code{--internal-links} option of the texi2any/makeinfo
specification.  This is only supported in (and relevant for) HTML.

@end table

@node Texinfo::Convert::HTML AUTHOR
@section AUTHOR

Patrice Dumas, <pertusus@@free.fr>

