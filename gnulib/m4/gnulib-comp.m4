# DO NOT EDIT! GENERATED AUTOMATICALLY!
# Copyright (C) 2002-2023 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
#
# This file represents the compiled summary of the specification in
# gnulib-cache.m4. It lists the computed macro invocations that need
# to be invoked from configure.ac.
# In projects that use version control, this file can be treated like
# other built files.


# This macro should be invoked from ./configure.ac, in the section
# "Checks for programs", right after AC_PROG_CC, and certainly before
# any checks for libraries, header files, types and library functions.
AC_DEFUN([gl_EARLY],
[
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  # Code from module absolute-header:
  # Code from module alignasof:
  # Code from module alloca-opt:
  # Code from module argz:
  # Code from module assert-h:
  # Code from module attribute:
  # Code from module basename-lgpl:
  # Code from module btowc:
  # Code from module builtin-expect:
  # Code from module c32isalnum:
  # Code from module c32isalpha:
  # Code from module c32isblank:
  # Code from module c32iscntrl:
  # Code from module c32isdigit:
  # Code from module c32isgraph:
  # Code from module c32islower:
  # Code from module c32isprint:
  # Code from module c32ispunct:
  # Code from module c32isspace:
  # Code from module c32isupper:
  # Code from module c32isxdigit:
  # Code from module c32tolower:
  # Code from module c32width:
  # Code from module c99:
  # Code from module calloc-gnu:
  # Code from module calloc-posix:
  # Code from module clock-time:
  # Code from module cloexec:
  # Code from module close:
  # Code from module dirname-lgpl:
  # Code from module double-slash-root:
  # Code from module dup2:
  # Code from module errno:
  # Code from module error:
  # Code from module error-h:
  # Code from module exitfail:
  # Code from module extensions:
  # Code from module extern-inline:
  # Code from module fcntl:
  # Code from module fcntl-h:
  # Code from module fd-hook:
  # Code from module filename:
  # Code from module float:
  # Code from module free-posix:
  # Code from module fstat:
  # Code from module gen-header:
  # Code from module getdtablesize:
  # Code from module getopt-gnu:
  # Code from module getopt-posix:
  # Code from module getprogname:
  # Code from module getrandom:
  # Code from module gettext-h:
  # Code from module glibc-internal/dynarray:
  # Code from module hard-locale:
  # Code from module havelib:
  # Code from module ialloc:
  # Code from module iconv:
  # Code from module idx:
  # Code from module include_next:
  # Code from module intprops:
  # Code from module inttypes-incomplete:
  # Code from module iswblank:
  # Code from module iswctype:
  # Code from module iswdigit:
  # Code from module iswpunct:
  # Code from module iswxdigit:
  # Code from module langinfo:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  # Code from module libc-config:
  # Code from module limits-h:
  # Code from module localcharset:
  # Code from module locale:
  # Code from module localeconv:
  # Code from module lock:
  # Code from module lstat:
  # Code from module malloc-gnu:
  # Code from module malloc-posix:
  # Code from module malloca:
  # Code from module mbchar:
  # Code from module mbiter:
  # Code from module mbrtoc32:
  # Code from module mbrtowc:
  # Code from module mbscasecmp:
  # Code from module mbschr:
  # Code from module mbsinit:
  # Code from module mbslen:
  # Code from module mbsncasecmp:
  # Code from module mbsstr:
  # Code from module mbswidth:
  # Code from module mbszero:
  # Code from module mbtowc:
  # Code from module mbuiter:
  # Code from module mbuiterf:
  # Code from module memchr:
  # Code from module mempcpy:
  # Code from module memrchr:
  # Code from module minmax:
  # Code from module mkdir:
  # Code from module mkstemp:
  # Code from module msvc-inval:
  # Code from module msvc-nothrow:
  # Code from module multiarch:
  # Code from module nl_langinfo:
  # Code from module nocrash:
  # Code from module open:
  # Code from module pathmax:
  # Code from module realloc-gnu:
  # Code from module realloc-posix:
  # Code from module reallocarray:
  # Code from module regex:
  # Code from module setlocale-null:
  # Code from module size_max:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-time:
  # Code from module std-gnu11:
  # Code from module stdarg:
  dnl Some compilers (e.g., AIX 5.3 cc) need to be in c99 mode
  dnl for the builtin va_copy to work.  gl_PROG_CC_C99 arranges for this.
  gl_PROG_CC_C99
  # Code from module stdbool:
  # Code from module stdckdint:
  # Code from module stddef:
  # Code from module stdint:
  # Code from module stdio:
  gl_STDIO_H_EARLY
  # Code from module stdlib:
  # Code from module stpcpy:
  # Code from module strcase:
  # Code from module strcasestr:
  # Code from module strcasestr-simple:
  # Code from module strdup-posix:
  # Code from module streq:
  # Code from module strerror:
  # Code from module strerror-override:
  # Code from module string:
  # Code from module strings:
  # Code from module strndup:
  # Code from module strnlen:
  # Code from module strnlen1:
  # Code from module strstr:
  # Code from module strstr-simple:
  # Code from module sys_random:
  # Code from module sys_stat:
  # Code from module sys_types:
  # Code from module tempname:
  # Code from module threadlib:
  gl_THREADLIB_EARLY
  # Code from module time-h:
  # Code from module uchar:
  # Code from module unicase/base:
  # Code from module unicase/tolower:
  # Code from module unictype/base:
  # Code from module unictype/ctype-alnum:
  # Code from module unictype/ctype-alpha:
  # Code from module unictype/ctype-blank:
  # Code from module unictype/ctype-cntrl:
  # Code from module unictype/ctype-digit:
  # Code from module unictype/ctype-graph:
  # Code from module unictype/ctype-lower:
  # Code from module unictype/ctype-print:
  # Code from module unictype/ctype-punct:
  # Code from module unictype/ctype-space:
  # Code from module unictype/ctype-upper:
  # Code from module unictype/ctype-xdigit:
  # Code from module uninorm/base:
  # Code from module unistd:
  # Code from module unitypes:
  # Code from module uniwidth/base:
  # Code from module uniwidth/width:
  # Code from module vararrays:
  # Code from module vasnprintf:
  # Code from module vasprintf:
  # Code from module verify:
  # Code from module wchar:
  # Code from module wcrtomb:
  # Code from module wctype:
  # Code from module wctype-h:
  # Code from module wcwidth:
  # Code from module windows-mutex:
  # Code from module windows-once:
  # Code from module windows-recmutex:
  # Code from module windows-rwlock:
  # Code from module xalloc:
  # Code from module xalloc-die:
  # Code from module xalloc-oversized:
  # Code from module xsize:
])

# This macro should be invoked from ./configure.ac, in the section
# "Check for header files, types and library functions".
AC_DEFUN([gl_INIT],
[
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='gnulib/m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='gnulib/lib'
  gl_source_base_prefix=
  gl_ALIGNASOF
  gl_FUNC_ALLOCA
  gl_CONDITIONAL_HEADER([alloca.h])
  AC_PROG_MKDIR_P
  gl_FUNC_ARGZ
  gl_CONDITIONAL_HEADER([argz.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_ARGZ], [test -n "$ARGZ_H"])
  gl_ASSERT_H
  gl_CONDITIONAL_HEADER([assert.h])
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isalnum])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isalpha])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isblank])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32iscntrl])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isdigit])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isgraph])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32islower])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isprint])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32ispunct])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isspace])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isupper])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32isxdigit])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32tolower])
  AC_REQUIRE([gl_UCHAR_H])
  dnl Determine REPLACE_MBSTATE_T, from which GNULIB_defined_mbstate_t is
  dnl determined.  It describes how mbrtoc32 is implemented.
  AC_REQUIRE([gl_MBSTATE_T_BROKEN])
  AC_REQUIRE([gl_MBRTOC32_SANITYCHECK])
  gl_UCHAR_MODULE_INDICATOR([c32width])
  gl_FUNC_CALLOC_GNU
  if test $REPLACE_CALLOC_FOR_CALLOC_GNU = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-gnu])
  gl_FUNC_CALLOC_POSIX
  if test $REPLACE_CALLOC_FOR_CALLOC_POSIX = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-posix])
  AC_REQUIRE([gl_ERROR_H])
  gl_ERROR
  gl_CONDITIONAL([GL_COND_OBJ_ERROR], [test $COMPILE_ERROR_C = 1])
  AM_COND_IF([GL_COND_OBJ_ERROR], [
    gl_PREREQ_ERROR
  ])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=error:3:c-format])
     AM_][XGETTEXT_OPTION([--flag=error_at_line:5:c-format])])
  gl_ERROR_H
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FUNC_GETOPT_GNU
  dnl Because of the way gl_FUNC_GETOPT_GNU is implemented (the gl_getopt_required
  dnl mechanism), there is no need to do any AC_LIBOBJ or AC_SUBST here; they are
  dnl done in the getopt-posix module.
  gl_FUNC_GETOPT_POSIX
  gl_CONDITIONAL_HEADER([getopt.h])
  gl_CONDITIONAL_HEADER([getopt-cdefs.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_GETOPT], [test $REPLACE_GETOPT = 1])
  AM_COND_IF([GL_COND_OBJ_GETOPT], [
    dnl Define the substituted variable GNULIB_UNISTD_H_GETOPT to 1.
    gl_UNISTD_H_REQUIRE_DEFAULTS
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
  ])
  gl_UNISTD_MODULE_INDICATOR([getopt-posix])
  gl_FUNC_GETPROGNAME
  gl_CONDITIONAL([GL_COND_OBJ_GETPROGNAME],
                 [test $HAVE_GETPROGNAME = 0 || test $REPLACE_GETPROGNAME = 1])
  AM_COND_IF([GL_COND_OBJ_GETPROGNAME], [
    gl_PREREQ_GETPROGNAME
  ])
  gl_STDLIB_MODULE_INDICATOR([getprogname])
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  AC_DEFUN([gl_HAVE_MODULE_HAVELIB])
  AM_ICONV
  m4_ifdef([gl_ICONV_MODULE_INDICATOR],
    [gl_ICONV_MODULE_INDICATOR([iconv])])
  gl_INTTYPES_INCOMPLETE
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_ISWBLANK
  gl_CONDITIONAL([GL_COND_OBJ_ISWBLANK],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && { test $HAVE_ISWBLANK = 0 || test $REPLACE_ISWBLANK = 1; }])
  gl_WCTYPE_MODULE_INDICATOR([iswblank])
  gl_FUNC_ISWDIGIT
  gl_CONDITIONAL([GL_COND_OBJ_ISWDIGIT],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWDIGIT = 1])
  gl_WCTYPE_MODULE_INDICATOR([iswdigit])
  gl_FUNC_ISWPUNCT
  gl_CONDITIONAL([GL_COND_OBJ_ISWPUNCT],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWPUNCT = 1])
  gl_WCTYPE_MODULE_INDICATOR([iswpunct])
  gl_FUNC_ISWXDIGIT
  gl_CONDITIONAL([GL_COND_OBJ_ISWXDIGIT],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWXDIGIT = 1])
  gl_WCTYPE_MODULE_INDICATOR([iswxdigit])
  AC_REQUIRE([gl_LARGEFILE])
  gl_LIMITS_H
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_FUNC_MALLOC_GNU
  if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-posix])
  gl_MALLOCA
  gl_MBCHAR
  gl_MBITER
  gl_FUNC_MBRTOC32
  gl_CONDITIONAL([GL_COND_OBJ_MBRTOC32],
                 [test $HAVE_MBRTOC32 = 0 || test $REPLACE_MBRTOC32 = 1])
  AM_COND_IF([GL_COND_OBJ_MBRTOC32], [
    if test $REPLACE_MBSTATE_T = 1; then
      AC_LIBOBJ([lc-charset-dispatch])
      AC_LIBOBJ([mbtowc-lock])
      gl_PREREQ_MBTOWC_LOCK
    fi
    gl_PREREQ_MBRTOC32
  ])
  gl_UCHAR_MODULE_INDICATOR([mbrtoc32])
  gl_STRING_MODULE_INDICATOR([mbscasecmp])
  gl_STRING_MODULE_INDICATOR([mbschr])
  gl_FUNC_MBSINIT
  gl_CONDITIONAL([GL_COND_OBJ_MBSINIT],
                 [test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1])
  AM_COND_IF([GL_COND_OBJ_MBSINIT], [
    gl_PREREQ_MBSINIT
  ])
  gl_WCHAR_MODULE_INDICATOR([mbsinit])
  gl_FUNC_MBSLEN
  gl_STRING_MODULE_INDICATOR([mbslen])
  gl_STRING_MODULE_INDICATOR([mbsncasecmp])
  gl_STRING_MODULE_INDICATOR([mbsstr])
  gl_MBSWIDTH
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN
  gl_MUSL_LIBC
  gl_WCHAR_MODULE_INDICATOR([mbszero])
  gl_MBITER
  gl_MBITER
  gl_FUNC_MEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
  AM_COND_IF([GL_COND_OBJ_MEMCHR], [
    gl_PREREQ_MEMCHR
  ])
  gl_STRING_MODULE_INDICATOR([memchr])
  gl_FUNC_MEMRCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
  AM_COND_IF([GL_COND_OBJ_MEMRCHR], [
    gl_PREREQ_MEMRCHR
  ])
  gl_STRING_MODULE_INDICATOR([memrchr])
  gl_MINMAX
  gl_FUNC_MKSTEMP
  gl_CONDITIONAL([GL_COND_OBJ_MKSTEMP],
                 [test $HAVE_MKSTEMP = 0 || test $REPLACE_MKSTEMP = 1])
  AM_COND_IF([GL_COND_OBJ_MKSTEMP], [
    gl_PREREQ_MKSTEMP
  ])
  gl_STDLIB_MODULE_INDICATOR([mkstemp])
  gl_MULTIARCH
  gl_FUNC_REALLOC_GNU
  if test $REPLACE_REALLOC_FOR_REALLOC_GNU = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-gnu])
  gl_FUNC_REALLOC_POSIX
  if test $REPLACE_REALLOC_FOR_REALLOC_POSIX = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-posix])
  gl_FUNC_REALLOCARRAY
  gl_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY],
                 [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
  AM_COND_IF([GL_COND_OBJ_REALLOCARRAY], [
    gl_PREREQ_REALLOCARRAY
  ])
  gl_MODULE_INDICATOR([reallocarray])
  gl_STDLIB_MODULE_INDICATOR([reallocarray])
  gl_REGEX
  gl_CONDITIONAL([GL_COND_OBJ_REGEX], [test $ac_use_included_regex = yes])
  AM_COND_IF([GL_COND_OBJ_REGEX], [
    gl_PREREQ_REGEX
  ])
  gt_TYPE_SSIZE_T
  gl_STDARG_H
  gl_CONDITIONAL_HEADER([stdarg.h])
  AC_PROG_MKDIR_P
  gl_C_BOOL
  AC_CHECK_HEADERS_ONCE([stdckdint.h])
  if test $ac_cv_header_stdckdint_h = yes; then
    GL_GENERATE_STDCKDINT_H=false
  else
    GL_GENERATE_STDCKDINT_H=true
  fi
  gl_CONDITIONAL_HEADER([stdckdint.h])
  AC_PROG_MKDIR_P
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([stddef.h])
  AC_PROG_MKDIR_P
  gl_STDINT_H
  gl_CONDITIONAL_HEADER([stdint.h])
  dnl Because of gl_REPLACE_LIMITS_H:
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_STDIO_H
  gl_STDIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fscanf])
  gl_MODULE_INDICATOR([fscanf])
  gl_STDIO_MODULE_INDICATOR([scanf])
  gl_MODULE_INDICATOR([scanf])
  gl_STDIO_MODULE_INDICATOR([fgetc])
  gl_STDIO_MODULE_INDICATOR([getc])
  gl_STDIO_MODULE_INDICATOR([getchar])
  gl_STDIO_MODULE_INDICATOR([fgets])
  gl_STDIO_MODULE_INDICATOR([fread])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fprintf])
  gl_STDIO_MODULE_INDICATOR([printf])
  gl_STDIO_MODULE_INDICATOR([vfprintf])
  gl_STDIO_MODULE_INDICATOR([vprintf])
  gl_STDIO_MODULE_INDICATOR([fputc])
  gl_STDIO_MODULE_INDICATOR([putc])
  gl_STDIO_MODULE_INDICATOR([putchar])
  gl_STDIO_MODULE_INDICATOR([fputs])
  gl_STDIO_MODULE_INDICATOR([puts])
  gl_STDIO_MODULE_INDICATOR([fwrite])
  gl_STDLIB_H
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_STRCASE
  gl_CONDITIONAL([GL_COND_OBJ_STRCASECMP], [test $HAVE_STRCASECMP = 0])
  AM_COND_IF([GL_COND_OBJ_STRCASECMP], [
    gl_PREREQ_STRCASECMP
  ])
  gl_CONDITIONAL([GL_COND_OBJ_STRNCASECMP], [test $HAVE_STRNCASECMP = 0])
  AM_COND_IF([GL_COND_OBJ_STRNCASECMP], [
    gl_PREREQ_STRNCASECMP
  ])
  gl_FUNC_STRCASESTR
  if test $HAVE_STRCASESTR = 0 || test $REPLACE_STRCASESTR = 1; then
    AC_LIBOBJ([strcasestr])
    gl_PREREQ_STRCASESTR
  fi
  gl_FUNC_STRCASESTR_SIMPLE
  if test $HAVE_STRCASESTR = 0 || test $REPLACE_STRCASESTR = 1; then
    AC_LIBOBJ([strcasestr])
    gl_PREREQ_STRCASESTR
  fi
  gl_STRING_MODULE_INDICATOR([strcasestr])
  gl_FUNC_STRDUP_POSIX
  gl_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
  AM_COND_IF([GL_COND_OBJ_STRDUP], [
    gl_PREREQ_STRDUP
  ])
  gl_STRING_MODULE_INDICATOR([strdup])
  gl_FUNC_STRERROR
  gl_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
  gl_MODULE_INDICATOR([strerror])
  gl_STRING_MODULE_INDICATOR([strerror])
  gl_STRING_H
  gl_STRING_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_STRINGS_H
  gl_STRINGS_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_STRNLEN
  gl_CONDITIONAL([GL_COND_OBJ_STRNLEN],
                 [test $HAVE_DECL_STRNLEN = 0 || test $REPLACE_STRNLEN = 1])
  AM_COND_IF([GL_COND_OBJ_STRNLEN], [
    gl_PREREQ_STRNLEN
  ])
  gl_STRING_MODULE_INDICATOR([strnlen])
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UCHAR_H
  gl_UCHAR_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_LIBUNISTRING_LIBHEADER([1.2], [unicase.h])
  gl_UNICASE_H
  gl_UNICASE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_LIBUNISTRING_MODULE([0.9.11], [unicase/tolower])
  gl_LIBUNISTRING_LIBHEADER([1.2], [unictype.h])
  gl_UNICTYPE_H
  gl_UNICTYPE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([1.1], [unictype/ctype-alnum])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([1.1], [unictype/ctype-alpha])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-blank])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-cntrl])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-digit])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([1.1], [unictype/ctype-graph])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.11], [unictype/ctype-lower])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([1.1], [unictype/ctype-print])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([1.1], [unictype/ctype-punct])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-space])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.11], [unictype/ctype-upper])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-xdigit])
  gl_LIBUNISTRING_LIBHEADER([1.2], [uninorm.h])
  gl_UNINORM_H
  gl_UNINORM_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [unitypes.h])
  AC_PROG_MKDIR_P
  AH_VERBATIM([unitypes_restrict], [
  /* This definition is a duplicate of the one in unitypes.h.
     It is here so that we can cope with an older version of unitypes.h
     that does not contain this definition and that is pre-installed among
     the public header files.  */
  # if defined __restrict \
       || 2 < __GNUC__ + (95 <= __GNUC_MINOR__) \
       || __clang_major__ >= 3
  #  define _UC_RESTRICT __restrict
  # elif 199901L <= __STDC_VERSION__ || defined restrict
  #  define _UC_RESTRICT restrict
  # else
  #  define _UC_RESTRICT
  # endif
  ])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [uniwidth.h])
  AC_PROG_MKDIR_P
  gl_LIBUNISTRING_MODULE([1.1], [uniwidth/width])
  AC_C_VARARRAYS
  gl_FUNC_VASPRINTF
  gl_STDIO_MODULE_INDICATOR([vasprintf])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=asprintf:2:c-format])
     AM_][XGETTEXT_OPTION([--flag=vasprintf:2:c-format])])
  gl_WCHAR_H
  gl_WCHAR_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_WCTYPE_H
  gl_WCTYPE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_WCWIDTH
  gl_CONDITIONAL([GL_COND_OBJ_WCWIDTH],
                 [test $HAVE_WCWIDTH = 0 || test $REPLACE_WCWIDTH = 1])
  AM_COND_IF([GL_COND_OBJ_WCWIDTH], [
    gl_PREREQ_WCWIDTH
  ])
  gl_WCHAR_MODULE_INDICATOR([wcwidth])
  gl_XALLOC
  gl_MODULE_INDICATOR([xalloc])
  gl_MODULE_INDICATOR([xalloc-die])
  gl_gnulib_enabled_attribute=false
  gl_gnulib_enabled_ae0d979e17e723693567f9efd1d2294f=false
  gl_gnulib_enabled_btowc=false
  gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547=false
  gl_gnulib_enabled_c58c2549aa84fceb9f0ca39c3eb5c7bd=false
  gl_gnulib_enabled_cloexec=false
  gl_gnulib_enabled_close=false
  gl_gnulib_enabled_a691da99c1d83b83238e45f41a696f5c=false
  gl_gnulib_enabled_36afd6902ac3aacf32e3ff12a686c346=false
  gl_gnulib_enabled_dup2=false
  gl_gnulib_enabled_errno=false
  gl_gnulib_enabled_fcntl=false
  gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8=false
  gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239=false
  gl_gnulib_enabled_filename=false
  gl_gnulib_enabled_float=false
  gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955=false
  gl_gnulib_enabled_fstat=false
  gl_gnulib_enabled_getdtablesize=false
  gl_gnulib_enabled_getrandom=false
  gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c=false
  gl_gnulib_enabled_30838f5439487421042f2225bed3af76=false
  gl_gnulib_enabled_intprops=false
  gl_gnulib_enabled_iswctype=false
  gl_gnulib_enabled_langinfo=false
  gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467=false
  gl_gnulib_enabled_localcharset=false
  gl_gnulib_enabled_locale=false
  gl_gnulib_enabled_localeconv=false
  gl_gnulib_enabled_lock=false
  gl_gnulib_enabled_lstat=false
  gl_gnulib_enabled_mbrtowc=false
  gl_gnulib_enabled_mbtowc=false
  gl_gnulib_enabled_mempcpy=false
  gl_gnulib_enabled_mkdir=false
  gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616=false
  gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07=false
  gl_gnulib_enabled_nl_langinfo=false
  gl_gnulib_enabled_open=false
  gl_gnulib_enabled_pathmax=false
  gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd=false
  gl_gnulib_enabled_size_max=false
  gl_gnulib_enabled_stat=false
  gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c=false
  gl_gnulib_enabled_stpcpy=false
  gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72=false
  gl_gnulib_enabled_strndup=false
  gl_gnulib_enabled_strstr=false
  gl_gnulib_enabled_f84f170cca5f5b09d22686d5b833aa41=false
  gl_gnulib_enabled_sys_random=false
  gl_gnulib_enabled_sys_stat=false
  gl_gnulib_enabled_tempname=false
  gl_gnulib_enabled_threadlib=false
  gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd=false
  gl_gnulib_enabled_vasnprintf=false
  gl_gnulib_enabled_verify=false
  gl_gnulib_enabled_wcrtomb=false
  gl_gnulib_enabled_wctype=false
  gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440=false
  gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab=false
  gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354=false
  gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef=false
  gl_gnulib_enabled_xsize=false
  func_gl_gnulib_m4code_attribute ()
  {
    if $gl_gnulib_enabled_attribute; then :; else
      gl_gnulib_enabled_attribute=true
    fi
  }
  func_gl_gnulib_m4code_ae0d979e17e723693567f9efd1d2294f ()
  {
    if $gl_gnulib_enabled_ae0d979e17e723693567f9efd1d2294f; then :; else
      gl_gnulib_enabled_ae0d979e17e723693567f9efd1d2294f=true
      func_gl_gnulib_m4code_36afd6902ac3aacf32e3ff12a686c346
      func_gl_gnulib_m4code_filename
    fi
  }
  func_gl_gnulib_m4code_btowc ()
  {
    if $gl_gnulib_enabled_btowc; then :; else
      gl_FUNC_BTOWC
      gl_CONDITIONAL([GL_COND_OBJ_BTOWC],
                     [test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1])
      AM_COND_IF([GL_COND_OBJ_BTOWC], [
        gl_PREREQ_BTOWC
      ])
      gl_WCHAR_MODULE_INDICATOR([btowc])
      gl_gnulib_enabled_btowc=true
      if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then
        func_gl_gnulib_m4code_mbrtowc
      fi
      if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then
        func_gl_gnulib_m4code_mbtowc
      fi
    fi
  }
  func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547 ()
  {
    if $gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547; then :; else
      gl___BUILTIN_EXPECT
      gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547=true
    fi
  }
  func_gl_gnulib_m4code_c58c2549aa84fceb9f0ca39c3eb5c7bd ()
  {
    if $gl_gnulib_enabled_c58c2549aa84fceb9f0ca39c3eb5c7bd; then :; else
      gl_CLOCK_TIME
      gl_gnulib_enabled_c58c2549aa84fceb9f0ca39c3eb5c7bd=true
    fi
  }
  func_gl_gnulib_m4code_cloexec ()
  {
    if $gl_gnulib_enabled_cloexec; then :; else
      gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
      gl_gnulib_enabled_cloexec=true
      func_gl_gnulib_m4code_dup2
      func_gl_gnulib_m4code_fcntl
    fi
  }
  func_gl_gnulib_m4code_close ()
  {
    if $gl_gnulib_enabled_close; then :; else
      gl_FUNC_CLOSE
      gl_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
      gl_UNISTD_MODULE_INDICATOR([close])
      gl_gnulib_enabled_close=true
      if test $REPLACE_CLOSE = 1; then
        func_gl_gnulib_m4code_43fe87a341d9b4b93c47c3ad819a5239
      fi
      if test $REPLACE_CLOSE = 1; then
        func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
      fi
    fi
  }
  func_gl_gnulib_m4code_a691da99c1d83b83238e45f41a696f5c ()
  {
    if $gl_gnulib_enabled_a691da99c1d83b83238e45f41a696f5c; then :; else
      gl_gnulib_enabled_a691da99c1d83b83238e45f41a696f5c=true
      func_gl_gnulib_m4code_ae0d979e17e723693567f9efd1d2294f
      func_gl_gnulib_m4code_36afd6902ac3aacf32e3ff12a686c346
      func_gl_gnulib_m4code_filename
    fi
  }
  func_gl_gnulib_m4code_36afd6902ac3aacf32e3ff12a686c346 ()
  {
    if $gl_gnulib_enabled_36afd6902ac3aacf32e3ff12a686c346; then :; else
      gl_DOUBLE_SLASH_ROOT
      gl_gnulib_enabled_36afd6902ac3aacf32e3ff12a686c346=true
    fi
  }
  func_gl_gnulib_m4code_dup2 ()
  {
    if $gl_gnulib_enabled_dup2; then :; else
      gl_FUNC_DUP2
      gl_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
      AM_COND_IF([GL_COND_OBJ_DUP2], [
        gl_PREREQ_DUP2
      ])
      gl_UNISTD_MODULE_INDICATOR([dup2])
      gl_gnulib_enabled_dup2=true
      if test $REPLACE_DUP2 = 1; then
        func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
      fi
      if test $REPLACE_DUP2 = 1; then
        func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
      fi
    fi
  }
  func_gl_gnulib_m4code_errno ()
  {
    if $gl_gnulib_enabled_errno; then :; else
      gl_HEADER_ERRNO_H
      gl_CONDITIONAL_HEADER([errno.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_errno=true
    fi
  }
  func_gl_gnulib_m4code_fcntl ()
  {
    if $gl_gnulib_enabled_fcntl; then :; else
      gl_FUNC_FCNTL
      gl_CONDITIONAL([GL_COND_OBJ_FCNTL],
                     [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
      gl_FCNTL_MODULE_INDICATOR([fcntl])
      gl_gnulib_enabled_fcntl=true
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_close
      fi
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_dup2
      fi
      func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_getdtablesize
      fi
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
      fi
    fi
  }
  func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8 ()
  {
    if $gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8; then :; else
      gl_FCNTL_H
      gl_FCNTL_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8=true
    fi
  }
  func_gl_gnulib_m4code_43fe87a341d9b4b93c47c3ad819a5239 ()
  {
    if $gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239; then :; else
      gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239=true
    fi
  }
  func_gl_gnulib_m4code_filename ()
  {
    if $gl_gnulib_enabled_filename; then :; else
      gl_gnulib_enabled_filename=true
    fi
  }
  func_gl_gnulib_m4code_float ()
  {
    if $gl_gnulib_enabled_float; then :; else
      gl_FLOAT_H
      gl_CONDITIONAL_HEADER([float.h])
      AC_PROG_MKDIR_P
      gl_CONDITIONAL([GL_COND_OBJ_FLOAT], [test $REPLACE_FLOAT_LDBL = 1])
      gl_CONDITIONAL([GL_COND_OBJ_ITOLD], [test $REPLACE_ITOLD = 1])
      gl_gnulib_enabled_float=true
    fi
  }
  func_gl_gnulib_m4code_ef07dc4b3077c11ea9cef586db4e5955 ()
  {
    if $gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955; then :; else
      gl_FUNC_FREE
      gl_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
      AM_COND_IF([GL_COND_OBJ_FREE], [
        gl_PREREQ_FREE
      ])
      gl_STDLIB_MODULE_INDICATOR([free-posix])
      gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955=true
    fi
  }
  func_gl_gnulib_m4code_fstat ()
  {
    if $gl_gnulib_enabled_fstat; then :; else
      gl_FUNC_FSTAT
      gl_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
      AM_COND_IF([GL_COND_OBJ_FSTAT], [
        case "$host_os" in
          mingw* | windows*)
            AC_LIBOBJ([stat-w32])
            ;;
        esac
        gl_PREREQ_FSTAT
      ])
      gl_SYS_STAT_MODULE_INDICATOR([fstat])
      gl_gnulib_enabled_fstat=true
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_pathmax
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_stat
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c
      fi
      func_gl_gnulib_m4code_sys_stat
    fi
  }
  func_gl_gnulib_m4code_getdtablesize ()
  {
    if $gl_gnulib_enabled_getdtablesize; then :; else
      gl_FUNC_GETDTABLESIZE
      gl_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE],
                     [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
      AM_COND_IF([GL_COND_OBJ_GETDTABLESIZE], [
        gl_PREREQ_GETDTABLESIZE
      ])
      gl_UNISTD_MODULE_INDICATOR([getdtablesize])
      gl_gnulib_enabled_getdtablesize=true
      if test $HAVE_GETDTABLESIZE = 0; then
        func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
      fi
    fi
  }
  func_gl_gnulib_m4code_getrandom ()
  {
    if $gl_gnulib_enabled_getrandom; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_FUNC_GETRANDOM
      gl_CONDITIONAL([GL_COND_OBJ_GETRANDOM],
                     [test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1])
      gl_SYS_RANDOM_MODULE_INDICATOR([getrandom])
      gl_gnulib_enabled_getrandom=true
      if test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1; then
        func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8
      fi
      if case $host_os in mingw* | windows*) false;; *) test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1;; esac; then
        func_gl_gnulib_m4code_open
      fi
      func_gl_gnulib_m4code_sys_random
    fi
  }
  func_gl_gnulib_m4code_fd38c7e463b54744b77b98aeafb4fa7c ()
  {
    if $gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c; then :; else
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c=true
      func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547
      func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467
    fi
  }
  func_gl_gnulib_m4code_30838f5439487421042f2225bed3af76 ()
  {
    if $gl_gnulib_enabled_30838f5439487421042f2225bed3af76; then :; else
      AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
      HARD_LOCALE_LIB="$SETLOCALE_NULL_LIB"
      AC_SUBST([HARD_LOCALE_LIB])
      dnl For backward compatibility.
      LIB_HARD_LOCALE="$HARD_LOCALE_LIB"
      AC_SUBST([LIB_HARD_LOCALE])
      gl_gnulib_enabled_30838f5439487421042f2225bed3af76=true
      func_gl_gnulib_m4code_e7e881d32ca02f1c997b13c737c64bbd
    fi
  }
  func_gl_gnulib_m4code_intprops ()
  {
    if $gl_gnulib_enabled_intprops; then :; else
      gl_gnulib_enabled_intprops=true
    fi
  }
  func_gl_gnulib_m4code_iswctype ()
  {
    if $gl_gnulib_enabled_iswctype; then :; else
      gl_FUNC_ISWCTYPE
      gl_CONDITIONAL([GL_COND_OBJ_ISWCTYPE],
                     [test $HAVE_WCTYPE_T = 0 || test $GNULIBHEADERS_OVERRIDE_WINT_T = 1 || test $REPLACE_WCTYPE = 1])
      gl_WCTYPE_MODULE_INDICATOR([iswctype])
      gl_gnulib_enabled_iswctype=true
    fi
  }
  func_gl_gnulib_m4code_langinfo ()
  {
    if $gl_gnulib_enabled_langinfo; then :; else
      gl_LANGINFO_H
      gl_LANGINFO_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_langinfo=true
    fi
  }
  func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467 ()
  {
    if $gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467; then :; else
      gl___INLINE
      gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467=true
    fi
  }
  func_gl_gnulib_m4code_localcharset ()
  {
    if $gl_gnulib_enabled_localcharset; then :; else
      gl_LOCALCHARSET
      dnl For backward compatibility. Some packages still use this.
      LOCALCHARSET_TESTS_ENVIRONMENT=
      AC_SUBST([LOCALCHARSET_TESTS_ENVIRONMENT])
      gl_gnulib_enabled_localcharset=true
    fi
  }
  func_gl_gnulib_m4code_locale ()
  {
    if $gl_gnulib_enabled_locale; then :; else
      gl_LOCALE_H
      gl_LOCALE_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_locale=true
    fi
  }
  func_gl_gnulib_m4code_localeconv ()
  {
    if $gl_gnulib_enabled_localeconv; then :; else
      gl_FUNC_LOCALECONV
      gl_CONDITIONAL([GL_COND_OBJ_LOCALECONV], [test $REPLACE_LOCALECONV = 1])
      AM_COND_IF([GL_COND_OBJ_LOCALECONV], [
        gl_PREREQ_LOCALECONV
      ])
      gl_LOCALE_MODULE_INDICATOR([localeconv])
      gl_gnulib_enabled_localeconv=true
      func_gl_gnulib_m4code_locale
    fi
  }
  func_gl_gnulib_m4code_lock ()
  {
    if $gl_gnulib_enabled_lock; then :; else
      gl_LOCK
      gl_MODULE_INDICATOR([lock])
      gl_gnulib_enabled_lock=true
      func_gl_gnulib_m4code_threadlib
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_503a4cb75d69c787103d0aa2ab7d8440
      fi
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_68a4501daeca58988392c7e60b4917ab
      fi
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_f0efff84a70f4afba30902bb8ffe9354
      fi
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_8bb827fe37eaccf1b97feb0c87bc92ef
      fi
    fi
  }
  func_gl_gnulib_m4code_lstat ()
  {
    if $gl_gnulib_enabled_lstat; then :; else
      gl_FUNC_LSTAT
      gl_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
      AM_COND_IF([GL_COND_OBJ_LSTAT], [
        gl_PREREQ_LSTAT
      ])
      gl_SYS_STAT_MODULE_INDICATOR([lstat])
      gl_gnulib_enabled_lstat=true
      if test $REPLACE_LSTAT = 1; then
        func_gl_gnulib_m4code_stat
      fi
      if test $REPLACE_LSTAT = 1; then
        func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c
      fi
      func_gl_gnulib_m4code_sys_stat
    fi
  }
  func_gl_gnulib_m4code_mbrtowc ()
  {
    if $gl_gnulib_enabled_mbrtowc; then :; else
      gl_FUNC_MBRTOWC
      gl_CONDITIONAL([GL_COND_OBJ_MBRTOWC],
                     [test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1])
      AM_COND_IF([GL_COND_OBJ_MBRTOWC], [
        if test $REPLACE_MBSTATE_T = 1; then
          AC_LIBOBJ([lc-charset-dispatch])
          AC_LIBOBJ([mbtowc-lock])
          gl_PREREQ_MBTOWC_LOCK
        fi
        gl_PREREQ_MBRTOWC
      ])
      gl_WCHAR_MODULE_INDICATOR([mbrtowc])
      gl_gnulib_enabled_mbrtowc=true
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_attribute
      fi
      if { test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; } && test $REPLACE_MBSTATE_T = 0; then
        func_gl_gnulib_m4code_30838f5439487421042f2225bed3af76
      fi
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_localcharset
      fi
    fi
  }
  func_gl_gnulib_m4code_mbtowc ()
  {
    if $gl_gnulib_enabled_mbtowc; then :; else
      gl_FUNC_MBTOWC
      gl_CONDITIONAL([GL_COND_OBJ_MBTOWC],
                     [test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1])
      AM_COND_IF([GL_COND_OBJ_MBTOWC], [
        gl_PREREQ_MBTOWC
      ])
      gl_STDLIB_MODULE_INDICATOR([mbtowc])
      gl_gnulib_enabled_mbtowc=true
      if test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1; then
        func_gl_gnulib_m4code_mbrtowc
      fi
    fi
  }
  func_gl_gnulib_m4code_mempcpy ()
  {
    if $gl_gnulib_enabled_mempcpy; then :; else
      gl_FUNC_MEMPCPY
      gl_CONDITIONAL([GL_COND_OBJ_MEMPCPY],
                     [test $HAVE_MEMPCPY = 0 || test $REPLACE_MEMPCPY = 1])
      AM_COND_IF([GL_COND_OBJ_MEMPCPY], [
        gl_PREREQ_MEMPCPY
      ])
      gl_STRING_MODULE_INDICATOR([mempcpy])
      gl_gnulib_enabled_mempcpy=true
    fi
  }
  func_gl_gnulib_m4code_mkdir ()
  {
    if $gl_gnulib_enabled_mkdir; then :; else
      gl_FUNC_MKDIR
      gl_CONDITIONAL([GL_COND_OBJ_MKDIR], [test $REPLACE_MKDIR = 1])
      gl_SYS_STAT_MODULE_INDICATOR([mkdir])
      gl_gnulib_enabled_mkdir=true
      if test $REPLACE_MKDIR = 1; then
        func_gl_gnulib_m4code_a691da99c1d83b83238e45f41a696f5c
      fi
      if test $REPLACE_MKDIR = 1; then
        func_gl_gnulib_m4code_stat
      fi
      func_gl_gnulib_m4code_sys_stat
    fi
  }
  func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616 ()
  {
    if $gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616; then :; else
      AC_REQUIRE([gl_MSVC_INVAL])
      gl_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL],
                     [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
      gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616=true
    fi
  }
  func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07 ()
  {
    if $gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07; then :; else
      AC_REQUIRE([gl_MSVC_NOTHROW])
      gl_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW],
                     [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
      gl_MODULE_INDICATOR([msvc-nothrow])
      gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07=true
      func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
    fi
  }
  func_gl_gnulib_m4code_nl_langinfo ()
  {
    if $gl_gnulib_enabled_nl_langinfo; then :; else
      gl_FUNC_NL_LANGINFO
      gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO],
                     [test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1])
      gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO_LOCK],
                     [test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0])
      if test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0; then
        gl_PREREQ_NL_LANGINFO_LOCK
      fi
      gl_LANGINFO_MODULE_INDICATOR([nl_langinfo])
      gl_gnulib_enabled_nl_langinfo=true
      func_gl_gnulib_m4code_langinfo
      if test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1; then
        func_gl_gnulib_m4code_localeconv
      fi
      if test $HAVE_NL_LANGINFO = 0 || test $HAVE_LANGINFO_CODESET = 0; then
        func_gl_gnulib_m4code_e7e881d32ca02f1c997b13c737c64bbd
      fi
    fi
  }
  func_gl_gnulib_m4code_open ()
  {
    if $gl_gnulib_enabled_open; then :; else
      gl_FUNC_OPEN
      gl_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
      AM_COND_IF([GL_COND_OBJ_OPEN], [
        gl_PREREQ_OPEN
      ])
      gl_FCNTL_MODULE_INDICATOR([open])
      gl_gnulib_enabled_open=true
      if test $REPLACE_OPEN = 1; then
        func_gl_gnulib_m4code_cloexec
      fi
      func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8
      if test $REPLACE_OPEN = 1; then
        func_gl_gnulib_m4code_fstat
      fi
      if test $REPLACE_OPEN = 1; then
        func_gl_gnulib_m4code_stat
      fi
    fi
  }
  func_gl_gnulib_m4code_pathmax ()
  {
    if $gl_gnulib_enabled_pathmax; then :; else
      gl_PATHMAX
      gl_gnulib_enabled_pathmax=true
    fi
  }
  func_gl_gnulib_m4code_e7e881d32ca02f1c997b13c737c64bbd ()
  {
    if $gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd; then :; else
      gl_FUNC_SETLOCALE_NULL
      gl_CONDITIONAL([GL_COND_OBJ_SETLOCALE_LOCK],
                     [test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0])
      AM_COND_IF([GL_COND_OBJ_SETLOCALE_LOCK], [
        gl_PREREQ_SETLOCALE_LOCK
      ])
      gl_LOCALE_MODULE_INDICATOR([setlocale_null])
      gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd=true
      func_gl_gnulib_m4code_locale
    fi
  }
  func_gl_gnulib_m4code_size_max ()
  {
    if $gl_gnulib_enabled_size_max; then :; else
      gl_SIZE_MAX
      gl_gnulib_enabled_size_max=true
    fi
  }
  func_gl_gnulib_m4code_stat ()
  {
    if $gl_gnulib_enabled_stat; then :; else
      gl_FUNC_STAT
      gl_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
      AM_COND_IF([GL_COND_OBJ_STAT], [
        case "$host_os" in
          mingw* | windows*)
            AC_LIBOBJ([stat-w32])
            ;;
        esac
        gl_PREREQ_STAT
      ])
      gl_SYS_STAT_MODULE_INDICATOR([stat])
      gl_gnulib_enabled_stat=true
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_filename
      fi
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_pathmax
      fi
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c
      fi
      func_gl_gnulib_m4code_sys_stat
    fi
  }
  func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c ()
  {
    if $gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c; then :; else
      gl_STAT_TIME
      gl_STAT_BIRTHTIME
      gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c=true
      func_gl_gnulib_m4code_errno
      func_gl_gnulib_m4code_cb7562e84d8cf7185af782fe497b53dd
    fi
  }
  func_gl_gnulib_m4code_stpcpy ()
  {
    if $gl_gnulib_enabled_stpcpy; then :; else
      gl_FUNC_STPCPY
      gl_CONDITIONAL([GL_COND_OBJ_STPCPY],
                     [test $HAVE_STPCPY = 0 || test $REPLACE_STPCPY = 1])
      AM_COND_IF([GL_COND_OBJ_STPCPY], [
        gl_PREREQ_STPCPY
      ])
      gl_STRING_MODULE_INDICATOR([stpcpy])
      gl_gnulib_enabled_stpcpy=true
    fi
  }
  func_gl_gnulib_m4code_dbb57f49352be8fb86869629a254fb72 ()
  {
    if $gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72; then :; else
      AC_REQUIRE([gl_HEADER_ERRNO_H])
      AC_REQUIRE([gl_FUNC_STRERROR_0])
      gl_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE],
                     [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
      AM_COND_IF([GL_COND_OBJ_STRERROR_OVERRIDE], [
        gl_PREREQ_SYS_H_WINSOCK2
      ])
      gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72=true
      func_gl_gnulib_m4code_errno
    fi
  }
  func_gl_gnulib_m4code_strndup ()
  {
    if $gl_gnulib_enabled_strndup; then :; else
      gl_FUNC_STRNDUP
      gl_CONDITIONAL([GL_COND_OBJ_STRNDUP],
                     [test $HAVE_STRNDUP = 0 || test $REPLACE_STRNDUP = 1])
      gl_STRING_MODULE_INDICATOR([strndup])
      gl_gnulib_enabled_strndup=true
    fi
  }
  func_gl_gnulib_m4code_strstr ()
  {
    if $gl_gnulib_enabled_strstr; then :; else
      gl_FUNC_STRSTR
      if test $REPLACE_STRSTR = 1; then
        AC_LIBOBJ([strstr])
      fi
      gl_gnulib_enabled_strstr=true
      func_gl_gnulib_m4code_f84f170cca5f5b09d22686d5b833aa41
    fi
  }
  func_gl_gnulib_m4code_f84f170cca5f5b09d22686d5b833aa41 ()
  {
    if $gl_gnulib_enabled_f84f170cca5f5b09d22686d5b833aa41; then :; else
      gl_FUNC_STRSTR_SIMPLE
      if test $REPLACE_STRSTR = 1; then
        AC_LIBOBJ([strstr])
      fi
      gl_STRING_MODULE_INDICATOR([strstr])
      gl_gnulib_enabled_f84f170cca5f5b09d22686d5b833aa41=true
      if test $REPLACE_STRSTR = 1; then
        func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547
      fi
    fi
  }
  func_gl_gnulib_m4code_sys_random ()
  {
    if $gl_gnulib_enabled_sys_random; then :; else
      gl_SYS_RANDOM_H
      gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_sys_random=true
    fi
  }
  func_gl_gnulib_m4code_sys_stat ()
  {
    if $gl_gnulib_enabled_sys_stat; then :; else
      gl_SYS_STAT_H
      gl_SYS_STAT_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_sys_stat=true
      func_gl_gnulib_m4code_cb7562e84d8cf7185af782fe497b53dd
    fi
  }
  func_gl_gnulib_m4code_tempname ()
  {
    if $gl_gnulib_enabled_tempname; then :; else
      gl_FUNC_GEN_TEMPNAME
      gl_MODULE_INDICATOR([tempname])
      gl_gnulib_enabled_tempname=true
      func_gl_gnulib_m4code_c58c2549aa84fceb9f0ca39c3eb5c7bd
      func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8
      func_gl_gnulib_m4code_getrandom
      func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467
      func_gl_gnulib_m4code_lstat
      func_gl_gnulib_m4code_mkdir
      func_gl_gnulib_m4code_sys_stat
      func_gl_gnulib_m4code_cb7562e84d8cf7185af782fe497b53dd
    fi
  }
  func_gl_gnulib_m4code_threadlib ()
  {
    if $gl_gnulib_enabled_threadlib; then :; else
      AC_REQUIRE([gl_THREADLIB])
      gl_gnulib_enabled_threadlib=true
    fi
  }
  func_gl_gnulib_m4code_cb7562e84d8cf7185af782fe497b53dd ()
  {
    if $gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd; then :; else
      gl_TIME_H
      gl_TIME_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd=true
    fi
  }
  func_gl_gnulib_m4code_vasnprintf ()
  {
    if $gl_gnulib_enabled_vasnprintf; then :; else
      AC_REQUIRE([AC_C_RESTRICT])
      gl_FUNC_VASNPRINTF
      gl_gnulib_enabled_vasnprintf=true
      func_gl_gnulib_m4code_attribute
      func_gl_gnulib_m4code_errno
      func_gl_gnulib_m4code_float
      func_gl_gnulib_m4code_ef07dc4b3077c11ea9cef586db4e5955
      func_gl_gnulib_m4code_xsize
    fi
  }
  func_gl_gnulib_m4code_verify ()
  {
    if $gl_gnulib_enabled_verify; then :; else
      gl_gnulib_enabled_verify=true
    fi
  }
  func_gl_gnulib_m4code_wcrtomb ()
  {
    if $gl_gnulib_enabled_wcrtomb; then :; else
      gl_FUNC_WCRTOMB
      gl_CONDITIONAL([GL_COND_OBJ_WCRTOMB],
                     [test $HAVE_WCRTOMB = 0 || test $REPLACE_WCRTOMB = 1])
      AM_COND_IF([GL_COND_OBJ_WCRTOMB], [
        gl_PREREQ_WCRTOMB
      ])
      gl_WCHAR_MODULE_INDICATOR([wcrtomb])
      gl_gnulib_enabled_wcrtomb=true
    fi
  }
  func_gl_gnulib_m4code_wctype ()
  {
    if $gl_gnulib_enabled_wctype; then :; else
      gl_FUNC_WCTYPE
      gl_CONDITIONAL([GL_COND_OBJ_WCTYPE], [test $HAVE_WCTYPE = 0 || test $REPLACE_WCTYPE = 1])
      gl_WCTYPE_MODULE_INDICATOR([wctype])
      gl_gnulib_enabled_wctype=true
      if test $REPLACE_WCTYPE = 1; then
        func_gl_gnulib_m4code_iswctype
      fi
    fi
  }
  func_gl_gnulib_m4code_503a4cb75d69c787103d0aa2ab7d8440 ()
  {
    if $gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440=true
    fi
  }
  func_gl_gnulib_m4code_68a4501daeca58988392c7e60b4917ab ()
  {
    if $gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab=true
    fi
  }
  func_gl_gnulib_m4code_f0efff84a70f4afba30902bb8ffe9354 ()
  {
    if $gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354=true
    fi
  }
  func_gl_gnulib_m4code_8bb827fe37eaccf1b97feb0c87bc92ef ()
  {
    if $gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef=true
    fi
  }
  func_gl_gnulib_m4code_xsize ()
  {
    if $gl_gnulib_enabled_xsize; then :; else
      gl_XSIZE
      gl_gnulib_enabled_xsize=true
      func_gl_gnulib_m4code_attribute
      func_gl_gnulib_m4code_size_max
    fi
  }
  if test -n "$ARGZ_H"; then
    func_gl_gnulib_m4code_mempcpy
  fi
  if test -n "$ARGZ_H"; then
    func_gl_gnulib_m4code_stpcpy
  fi
  if test -n "$ARGZ_H"; then
    func_gl_gnulib_m4code_strndup
  fi
  if test -n "$ARGZ_H"; then
    func_gl_gnulib_m4code_strstr
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if test $COMPILE_ERROR_C = 1; then
    func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
  fi
  if test $HAVE_GETPROGNAME = 0; then
    func_gl_gnulib_m4code_ae0d979e17e723693567f9efd1d2294f
  fi
  if test $HAVE_GETPROGNAME = 0; then
    func_gl_gnulib_m4code_open
  fi
  if test $HAVE_MBRTOC32 = 0 || test $REPLACE_MBRTOC32 = 1; then
    func_gl_gnulib_m4code_attribute
  fi
  if { test $HAVE_MBRTOC32 = 0 || test $REPLACE_MBRTOC32 = 1; } && test $REPLACE_MBSTATE_T = 0; then
    func_gl_gnulib_m4code_30838f5439487421042f2225bed3af76
  fi
  if test $HAVE_MBRTOC32 = 0 || test $REPLACE_MBRTOC32 = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  if { test $HAVE_MBRTOC32 = 0 || test $REPLACE_MBRTOC32 = 1; } && test $REPLACE_MBSTATE_T = 0; then
    func_gl_gnulib_m4code_mbrtowc
  fi
  if test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1; then
    func_gl_gnulib_m4code_mbrtowc
  fi
  if test $HAVE_MKSTEMP = 0 || test $REPLACE_MKSTEMP = 1; then
    func_gl_gnulib_m4code_tempname
  fi
  if test $REPLACE_REALLOC_FOR_REALLOC_GNU = 1; then
    func_gl_gnulib_m4code_ef07dc4b3077c11ea9cef586db4e5955
  fi
  if test $REPLACE_REALLOC_FOR_REALLOC_POSIX = 1; then
    func_gl_gnulib_m4code_ef07dc4b3077c11ea9cef586db4e5955
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_attribute
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_btowc
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_fd38c7e463b54744b77b98aeafb4fa7c
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_intprops
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_iswctype
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_langinfo
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_lock
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_mbrtowc
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_nl_langinfo
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_verify
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_wcrtomb
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_wctype
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_errno
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_intprops
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_dbb57f49352be8fb86869629a254fb72
  fi
  if test $HAVE_VASPRINTF = 0 || test $REPLACE_VASPRINTF = 1; then
    func_gl_gnulib_m4code_errno
  fi
  if test $HAVE_VASPRINTF = 0 || test $REPLACE_VASPRINTF = 1; then
    func_gl_gnulib_m4code_vasnprintf
  fi
  if test $HAVE_WCWIDTH = 0 || test $REPLACE_WCWIDTH = 1; then
    func_gl_gnulib_m4code_localcharset
  fi
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_attribute], [$gl_gnulib_enabled_attribute])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_ae0d979e17e723693567f9efd1d2294f], [$gl_gnulib_enabled_ae0d979e17e723693567f9efd1d2294f])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_btowc], [$gl_gnulib_enabled_btowc])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_37f71b604aa9c54446783d80f42fe547], [$gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_c58c2549aa84fceb9f0ca39c3eb5c7bd], [$gl_gnulib_enabled_c58c2549aa84fceb9f0ca39c3eb5c7bd])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_cloexec], [$gl_gnulib_enabled_cloexec])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_close], [$gl_gnulib_enabled_close])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_a691da99c1d83b83238e45f41a696f5c], [$gl_gnulib_enabled_a691da99c1d83b83238e45f41a696f5c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_36afd6902ac3aacf32e3ff12a686c346], [$gl_gnulib_enabled_36afd6902ac3aacf32e3ff12a686c346])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_dup2], [$gl_gnulib_enabled_dup2])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_errno], [$gl_gnulib_enabled_errno])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_fcntl], [$gl_gnulib_enabled_fcntl])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_deb6c5f14b16306a85c59bccf4d416d8], [$gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_43fe87a341d9b4b93c47c3ad819a5239], [$gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_filename], [$gl_gnulib_enabled_filename])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_float], [$gl_gnulib_enabled_float])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_ef07dc4b3077c11ea9cef586db4e5955], [$gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_fstat], [$gl_gnulib_enabled_fstat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getdtablesize], [$gl_gnulib_enabled_getdtablesize])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getrandom], [$gl_gnulib_enabled_getrandom])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_fd38c7e463b54744b77b98aeafb4fa7c], [$gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_30838f5439487421042f2225bed3af76], [$gl_gnulib_enabled_30838f5439487421042f2225bed3af76])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_intprops], [$gl_gnulib_enabled_intprops])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_iswctype], [$gl_gnulib_enabled_iswctype])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_langinfo], [$gl_gnulib_enabled_langinfo])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_21ee726a3540c09237a8e70c0baf7467], [$gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_localcharset], [$gl_gnulib_enabled_localcharset])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_locale], [$gl_gnulib_enabled_locale])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_localeconv], [$gl_gnulib_enabled_localeconv])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_lock], [$gl_gnulib_enabled_lock])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_lstat], [$gl_gnulib_enabled_lstat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbrtowc], [$gl_gnulib_enabled_mbrtowc])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbtowc], [$gl_gnulib_enabled_mbtowc])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mempcpy], [$gl_gnulib_enabled_mempcpy])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mkdir], [$gl_gnulib_enabled_mkdir])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_f691f076f650964c9f5598c3ee487616], [$gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_676220fa4366efa9bdbfccf11a857c07], [$gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_nl_langinfo], [$gl_gnulib_enabled_nl_langinfo])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_open], [$gl_gnulib_enabled_open])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_pathmax], [$gl_gnulib_enabled_pathmax])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_e7e881d32ca02f1c997b13c737c64bbd], [$gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_size_max], [$gl_gnulib_enabled_size_max])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_stat], [$gl_gnulib_enabled_stat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_0137e3d3638b33e5819d132d0b23165c], [$gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_stpcpy], [$gl_gnulib_enabled_stpcpy])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_dbb57f49352be8fb86869629a254fb72], [$gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_strndup], [$gl_gnulib_enabled_strndup])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_strstr], [$gl_gnulib_enabled_strstr])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_f84f170cca5f5b09d22686d5b833aa41], [$gl_gnulib_enabled_f84f170cca5f5b09d22686d5b833aa41])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_sys_random], [$gl_gnulib_enabled_sys_random])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_sys_stat], [$gl_gnulib_enabled_sys_stat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_tempname], [$gl_gnulib_enabled_tempname])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_threadlib], [$gl_gnulib_enabled_threadlib])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_cb7562e84d8cf7185af782fe497b53dd], [$gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_vasnprintf], [$gl_gnulib_enabled_vasnprintf])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_verify], [$gl_gnulib_enabled_verify])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_wcrtomb], [$gl_gnulib_enabled_wcrtomb])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_wctype], [$gl_gnulib_enabled_wctype])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_503a4cb75d69c787103d0aa2ab7d8440], [$gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_68a4501daeca58988392c7e60b4917ab], [$gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_f0efff84a70f4afba30902bb8ffe9354], [$gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_8bb827fe37eaccf1b97feb0c87bc92ef], [$gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_xsize], [$gl_gnulib_enabled_xsize])
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    gl_libobjdeps=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gl_libobjdeps="$gl_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
    AC_SUBST([gl_LIBOBJDEPS], [$gl_libobjdeps])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='tests'
  gl_source_base_prefix=
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    gltests_libobjdeps=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gltests_libobjdeps="$gltests_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
    AC_SUBST([gltests_LIBOBJDEPS], [$gltests_libobjdeps])
  ])
  AC_REQUIRE([gl_CC_GNULIB_WARNINGS])
  LIBGNU_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBGNU_LIBDEPS])
  LIBGNU_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBGNU_LTLIBDEPS])
])

# Like AC_LIBOBJ, except that the module name goes
# into gl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into gl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [gnulib/lib])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# Like AC_LIBOBJ, except that the module name goes
# into gltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into gltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# This macro records the list of files which have been installed by
# gnulib-tool and may be removed by future gnulib-tool invocations.
AC_DEFUN([gl_FILE_LIST], [
  build-aux/config.rpath
  lib/_Noreturn.h
  lib/alloca.in.h
  lib/arg-nonnull.h
  lib/argz.c
  lib/argz.in.h
  lib/asnprintf.c
  lib/asprintf.c
  lib/assert.in.h
  lib/attribute.h
  lib/basename-lgpl.c
  lib/basename-lgpl.h
  lib/btowc.c
  lib/c++defs.h
  lib/c32is-impl.h
  lib/c32isalnum.c
  lib/c32isalpha.c
  lib/c32isblank.c
  lib/c32iscntrl.c
  lib/c32isdigit.c
  lib/c32isgraph.c
  lib/c32islower.c
  lib/c32isprint.c
  lib/c32ispunct.c
  lib/c32isspace.c
  lib/c32isupper.c
  lib/c32isxdigit.c
  lib/c32to-impl.h
  lib/c32tolower.c
  lib/c32width.c
  lib/calloc.c
  lib/cdefs.h
  lib/cloexec.c
  lib/cloexec.h
  lib/close.c
  lib/dirname-lgpl.c
  lib/dirname.h
  lib/dup2.c
  lib/dynarray.h
  lib/errno.in.h
  lib/error.c
  lib/error.in.h
  lib/exitfail.c
  lib/exitfail.h
  lib/fcntl.c
  lib/fcntl.in.h
  lib/fd-hook.c
  lib/fd-hook.h
  lib/filename.h
  lib/float+.h
  lib/float.c
  lib/float.in.h
  lib/free.c
  lib/fstat.c
  lib/getdtablesize.c
  lib/getopt-cdefs.in.h
  lib/getopt-core.h
  lib/getopt-ext.h
  lib/getopt-pfx-core.h
  lib/getopt-pfx-ext.h
  lib/getopt.c
  lib/getopt.in.h
  lib/getopt1.c
  lib/getopt_int.h
  lib/getprogname.c
  lib/getprogname.h
  lib/getrandom.c
  lib/gettext.h
  lib/glthread/lock.c
  lib/glthread/lock.h
  lib/glthread/threadlib.c
  lib/hard-locale.c
  lib/hard-locale.h
  lib/ialloc.c
  lib/ialloc.h
  lib/idx.h
  lib/intprops-internal.h
  lib/intprops.h
  lib/inttypes.in.h
  lib/iswblank.c
  lib/iswctype-impl.h
  lib/iswctype.c
  lib/iswdigit.c
  lib/iswpunct.c
  lib/iswxdigit.c
  lib/itold.c
  lib/langinfo.in.h
  lib/lc-charset-dispatch.c
  lib/lc-charset-dispatch.h
  lib/libc-config.h
  lib/limits.in.h
  lib/localcharset.c
  lib/localcharset.h
  lib/locale.in.h
  lib/localeconv.c
  lib/lstat.c
  lib/malloc.c
  lib/malloc/dynarray-skeleton.c
  lib/malloc/dynarray.h
  lib/malloc/dynarray_at_failure.c
  lib/malloc/dynarray_emplace_enlarge.c
  lib/malloc/dynarray_finalize.c
  lib/malloc/dynarray_resize.c
  lib/malloc/dynarray_resize_clear.c
  lib/malloca.c
  lib/malloca.h
  lib/mbchar.c
  lib/mbchar.h
  lib/mbiter.c
  lib/mbiter.h
  lib/mbrtoc32.c
  lib/mbrtowc-impl-utf8.h
  lib/mbrtowc-impl.h
  lib/mbrtowc.c
  lib/mbscasecmp.c
  lib/mbschr.c
  lib/mbsinit.c
  lib/mbslen.c
  lib/mbsncasecmp.c
  lib/mbsstr.c
  lib/mbswidth.c
  lib/mbswidth.h
  lib/mbszero.c
  lib/mbtowc-impl.h
  lib/mbtowc-lock.c
  lib/mbtowc-lock.h
  lib/mbtowc.c
  lib/mbuiter.c
  lib/mbuiter.h
  lib/mbuiterf.c
  lib/mbuiterf.h
  lib/memchr.c
  lib/memchr.valgrind
  lib/mempcpy.c
  lib/memrchr.c
  lib/minmax.h
  lib/mkdir.c
  lib/mkstemp.c
  lib/msvc-inval.c
  lib/msvc-inval.h
  lib/msvc-nothrow.c
  lib/msvc-nothrow.h
  lib/nl_langinfo-lock.c
  lib/nl_langinfo.c
  lib/open.c
  lib/pathmax.h
  lib/printf-args.c
  lib/printf-args.h
  lib/printf-parse.c
  lib/printf-parse.h
  lib/realloc.c
  lib/reallocarray.c
  lib/regcomp.c
  lib/regex.c
  lib/regex.h
  lib/regex_internal.c
  lib/regex_internal.h
  lib/regexec.c
  lib/setlocale-lock.c
  lib/setlocale_null.c
  lib/setlocale_null.h
  lib/size_max.h
  lib/stat-time.c
  lib/stat-time.h
  lib/stat-w32.c
  lib/stat-w32.h
  lib/stat.c
  lib/stdarg.in.h
  lib/stdckdint.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio-read.c
  lib/stdio-write.c
  lib/stdio.in.h
  lib/stdlib.in.h
  lib/stpcpy.c
  lib/str-kmp.h
  lib/str-two-way.h
  lib/strcasecmp.c
  lib/strcasestr.c
  lib/strdup.c
  lib/streq.h
  lib/strerror-override.c
  lib/strerror-override.h
  lib/strerror.c
  lib/string.in.h
  lib/strings.in.h
  lib/stripslash.c
  lib/strncasecmp.c
  lib/strndup.c
  lib/strnlen.c
  lib/strnlen1.c
  lib/strnlen1.h
  lib/strstr.c
  lib/sys_random.in.h
  lib/sys_stat.in.h
  lib/sys_types.in.h
  lib/tempname.c
  lib/tempname.h
  lib/time.in.h
  lib/uchar.in.h
  lib/unicase.in.h
  lib/unicase/simple-mapping.h
  lib/unicase/tolower.c
  lib/unicase/tolower.h
  lib/unictype.in.h
  lib/unictype/bitmap.h
  lib/unictype/ctype_alnum.c
  lib/unictype/ctype_alnum.h
  lib/unictype/ctype_alpha.c
  lib/unictype/ctype_alpha.h
  lib/unictype/ctype_blank.c
  lib/unictype/ctype_blank.h
  lib/unictype/ctype_cntrl.c
  lib/unictype/ctype_cntrl.h
  lib/unictype/ctype_digit.c
  lib/unictype/ctype_digit.h
  lib/unictype/ctype_graph.c
  lib/unictype/ctype_graph.h
  lib/unictype/ctype_lower.c
  lib/unictype/ctype_lower.h
  lib/unictype/ctype_print.c
  lib/unictype/ctype_print.h
  lib/unictype/ctype_punct.c
  lib/unictype/ctype_punct.h
  lib/unictype/ctype_space.c
  lib/unictype/ctype_space.h
  lib/unictype/ctype_upper.c
  lib/unictype/ctype_upper.h
  lib/unictype/ctype_xdigit.c
  lib/unictype/ctype_xdigit.h
  lib/uninorm.in.h
  lib/unistd.c
  lib/unistd.in.h
  lib/unitypes.in.h
  lib/uniwidth.in.h
  lib/uniwidth/cjk.h
  lib/uniwidth/width.c
  lib/uniwidth/width0.h
  lib/uniwidth/width2.h
  lib/vasnprintf.c
  lib/vasnprintf.h
  lib/vasprintf.c
  lib/verify.h
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/wcrtomb.c
  lib/wctype-h.c
  lib/wctype-impl.h
  lib/wctype.c
  lib/wctype.in.h
  lib/wcwidth.c
  lib/windows-initguard.h
  lib/windows-mutex.c
  lib/windows-mutex.h
  lib/windows-once.c
  lib/windows-once.h
  lib/windows-recmutex.c
  lib/windows-recmutex.h
  lib/windows-rwlock.c
  lib/windows-rwlock.h
  lib/xalloc-die.c
  lib/xalloc-oversized.h
  lib/xalloc.h
  lib/xmalloc.c
  lib/xsize.c
  lib/xsize.h
  m4/00gnulib.m4
  m4/__inline.m4
  m4/absolute-header.m4
  m4/alloca.m4
  m4/argz.m4
  m4/assert_h.m4
  m4/btowc.m4
  m4/builtin-expect.m4
  m4/c-bool.m4
  m4/calloc.m4
  m4/clock_time.m4
  m4/close.m4
  m4/codeset.m4
  m4/double-slash-root.m4
  m4/dup2.m4
  m4/eealloc.m4
  m4/errno_h.m4
  m4/error.m4
  m4/error_h.m4
  m4/exponentd.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/fcntl-o.m4
  m4/fcntl.m4
  m4/fcntl_h.m4
  m4/float_h.m4
  m4/free.m4
  m4/fstat.m4
  m4/getdtablesize.m4
  m4/getopt.m4
  m4/getprogname.m4
  m4/getrandom.m4
  m4/gnulib-common.m4
  m4/host-cpu-c-abi.m4
  m4/iconv.m4
  m4/include_next.m4
  m4/intmax_t.m4
  m4/inttypes.m4
  m4/inttypes_h.m4
  m4/iswblank.m4
  m4/iswctype.m4
  m4/iswdigit.m4
  m4/iswpunct.m4
  m4/iswxdigit.m4
  m4/langinfo_h.m4
  m4/largefile.m4
  m4/lib-ld.m4
  m4/lib-link.m4
  m4/lib-prefix.m4
  m4/libunistring-base.m4
  m4/limits-h.m4
  m4/localcharset.m4
  m4/locale-fr.m4
  m4/locale-ja.m4
  m4/locale-zh.m4
  m4/locale_h.m4
  m4/localeconv.m4
  m4/lock.m4
  m4/lstat.m4
  m4/malloc.m4
  m4/malloca.m4
  m4/math_h.m4
  m4/mbchar.m4
  m4/mbiter.m4
  m4/mbrtoc32.m4
  m4/mbrtowc.m4
  m4/mbsinit.m4
  m4/mbslen.m4
  m4/mbstate_t.m4
  m4/mbswidth.m4
  m4/mbtowc.m4
  m4/memchr.m4
  m4/mempcpy.m4
  m4/memrchr.m4
  m4/minmax.m4
  m4/mkdir.m4
  m4/mkstemp.m4
  m4/mmap-anon.m4
  m4/mode_t.m4
  m4/msvc-inval.m4
  m4/msvc-nothrow.m4
  m4/multiarch.m4
  m4/musl.m4
  m4/nl_langinfo.m4
  m4/nocrash.m4
  m4/off_t.m4
  m4/open-cloexec.m4
  m4/open-slash.m4
  m4/open.m4
  m4/pathmax.m4
  m4/pid_t.m4
  m4/printf.m4
  m4/pthread_rwlock_rdlock.m4
  m4/realloc.m4
  m4/reallocarray.m4
  m4/regex.m4
  m4/setlocale_null.m4
  m4/size_max.m4
  m4/ssize_t.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/std-gnu11.m4
  m4/stdalign.m4
  m4/stdarg.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdint_h.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/stpcpy.m4
  m4/strcase.m4
  m4/strcasestr.m4
  m4/strdup.m4
  m4/strerror.m4
  m4/string_h.m4
  m4/strings_h.m4
  m4/strndup.m4
  m4/strnlen.m4
  m4/strstr.m4
  m4/sys_random_h.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_types_h.m4
  m4/tempname.m4
  m4/threadlib.m4
  m4/time_h.m4
  m4/uchar_h.m4
  m4/unicase_h.m4
  m4/unictype_h.m4
  m4/uninorm_h.m4
  m4/unistd_h.m4
  m4/vararrays.m4
  m4/vasnprintf.m4
  m4/vasprintf.m4
  m4/visibility.m4
  m4/warn-on-use.m4
  m4/wchar_h.m4
  m4/wchar_t.m4
  m4/wcrtomb.m4
  m4/wctype.m4
  m4/wctype_h.m4
  m4/wcwidth.m4
  m4/wint_t.m4
  m4/xalloc.m4
  m4/xsize.m4
  m4/zzgnulib.m4
])
